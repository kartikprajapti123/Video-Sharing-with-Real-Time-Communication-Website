version: '3'

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: "jerry_project_production"
    command: sh -c "python manage.py makemigrations && python manage.py migrate && apache2ctl -D FOREGROUND"
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - "/var/www/Jerry-Project:/app"
      - /etc/letsencrypt/live/shareyourclips.online/fullchain.pem:/etc/ssl/certs/fullchain.pem
      - /etc/letsencrypt/live/shareyourclips.online/privkey.pem:/etc/ssl/private/privkey.pem
    env_file:
      - .env
    depends_on:
      - db
      - redis
    networks:
      - my_network
    restart: always

  daphne:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: "daphne"
    command: sh -c "python -m daphne -p 8003 jerry_project.asgi:application"
    ports:
      - "8003:8003"
    volumes:
      - "/var/www/Jerry-Project:/app"
      - /etc/letsencrypt/live/shareyourclips.online/fullchain.pem:/etc/ssl/certs/fullchain.pem
      - /etc/letsencrypt/live/shareyourclips.online/privkey.pem:/etc/ssl/private/privkey.pem
    env_file:
      - .env
    depends_on:
      - db
      - redis
    networks:
      - my_network
    restart: always

  db:
    image: postgres:15
    container_name: postgres_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    ports:
      - "5433:5432"
    networks:
      - my_network

  redis:
    image: redis:6
    container_name: redis
    ports:
      - "6370:6379"
    networks:
      - my_network
    restart: always

networks:
  my_network:
    driver: bridge

volumes:
  postgres_data:
